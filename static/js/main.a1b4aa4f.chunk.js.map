{"version":3,"sources":["container/convertionOfCoins/style.module.css","components/center/style.module.css","components/header/style.module.css","logo.svg","components/center/index.js","components/header/index.js","api/apiDeMoedas/index.js","services/coins/index.js","container/convertionOfCoins/index.js","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Center","props","className","Style","center","children","Header","logo","get","endPoint","Promise","resolver","reject","a","fetch","then","res","status","data","json","catch","e","console","log","getAllCoins","coins","allMoedas","ConvertionOfCoins","useState","infoCoins","setInfoCoins","coinCode1","setCoinCode1","coinCode2","setCoinCode2","coinValue1","setCoinValue1","coinValue2","setCoinValue2","getCoins","valueCoins","i","newInfoCoins","code","newCode","name","high","ask","codein","push","format","input","value","cotation1","cotation2","map","values","toFixed","convert1","convert2","useEffect","d","Date","getDate","getMonth","getFullYear","length","undefined","box","FormGroupHeader","h2","formGroup","select","onChange","event","target","handlerCoinCode1","coin","index","key","test","handlerCoinValue1","handlerCoinCode2","handlerCoinValue2","Pages","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a1b4aa4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__jRHdE\",\"h2\":\"style_h2__1lNUq\",\"formGroup\":\"style_formGroup__12YLI\",\"FormGroupHeader\":\"style_FormGroupHeader__3rYin\",\"input\":\"style_input__3jknm\",\"select\":\"style_select__1xo1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"style_center__3s1kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"style_logo__ELjiV\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport Style from './style.module.css';\r\nexport default function Center(props){\r\n    return(\r\n        <div className={Style.center}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Center from '../center';\r\nimport Style from  './style.module.css';\r\nexport default function Header(){\r\n    return(\r\n\r\n        <header>\r\n            <Center>\r\n            <div className={Style.logo}>\r\n              <h2>moedas</h2>\r\n                \r\n            </div>\r\n            </Center>\r\n        </header>\r\n    )\r\n} ","const URLBASE= \"https://economia.awesomeapi.com.br/json/\"\r\nconst get =(endPoint)=>{\r\n    return new Promise(async (resolver,reject)=>{\r\n        fetch(URLBASE+endPoint)\r\n            .then((res)=>{\r\n              \r\n              resolver({status:res.status, data:res.json()});\r\n            }).catch((e)=>{\r\n                console.log(e);\r\n               reject(e.json()); \r\n            })\r\n        \r\n        }) \r\n}\r\n\r\nexport {get};","import {get} from '../../api/apiDeMoedas';\r\n\r\nconst getAllCoins = async (coins)=>{\r\n\r\n    let allMoedas = await get(`all/${coins}`);\r\n    let status =allMoedas.status;\r\n    let data = await allMoedas.data;\r\n    return {status,data};\r\n}\r\nconst getClosingLastDays= async (coin,numberOfDays)=>{\r\n    let  allClosingCoins =  await get(`daily/${coin}/${numberOfDays}`);\r\n}\r\nexport{\r\n    getAllCoins,\r\n    getClosingLastDays};","import React, { useState, useEffect } from 'react';\r\nimport Center from '../../components/center';\r\nimport {getAllCoins} from '../../services/coins';\r\nimport Style from './style.module.css';\r\nexport default function ConvertionOfCoins(props){\r\n    const [infoCoins,setInfoCoins] = useState([]);\r\n    const [coinCode1,setCoinCode1]=useState('BRL');\r\n    const [coinCode2,setCoinCode2]=useState('USD-BRL');\r\n    const  [coinValue1,setCoinValue1]=useState(1);\r\n    const  [coinValue2,setCoinValue2]=useState();\r\n\r\n\r\n    const getCoins = async()=>{\r\n        let valueCoins = await getAllCoins('USD-BRL,USDT-BRL,CAD-BRL,AUD-BRL,EUR-BRL,GBP-BRL,ARS-BRL,JPY-BRL,CHF-BRL,CNY-BRL');\r\n        if(valueCoins.status===200){    \r\n        let newInfoCoins = [{code:'BRL',newCode:'BRL',name:'Real Brasileiro',high:1,ask:1}]\r\n            for(let i in valueCoins.data){\r\n                valueCoins.data[i].newCode=valueCoins.data[i].code +'-'+ valueCoins.data[i].codein;\r\n                newInfoCoins.push(valueCoins.data[i])\r\n            }\r\n            //newInfoCoins.push({code:'BRL',newCode:'BRL',name:'Real Brasileiro',high:1,ask:1})\r\n            setInfoCoins(newInfoCoins);\r\n            console.log(newInfoCoins)\r\n        }\r\n      }\r\n\r\n \r\n\r\n    const convert1 = (values)=>{\r\n        let {cotation1,cotation2,value} = values;\r\n        return ((value*cotation1)/cotation2).toFixed(2);\r\n    }\r\n    const convert2 = (values)=>{\r\n        let {cotation1,cotation2,value} = values;\r\n        return ((cotation2*value)/cotation1).toFixed(2);\r\n    }\r\n    \r\n    const format =(input,value)=>{  \r\n        let cotation1,cotation2;\r\n         infoCoins.map(e=>{\r\n             if(e.newCode===coinCode1){\r\n                console.log('e.high')\r\n                 console.log(e)\r\n                 cotation1 = e.ask;\r\n             }else if(e.newCode===coinCode2){\r\n                cotation2  = e.ask;\r\n             }\r\n         });\r\n     \r\n            if(input===1){\r\n                setCoinValue2(convert1({cotation2,cotation1,value}) )\r\n            }else if(input===2){\r\n                setCoinValue1(convert2({cotation2,cotation1,value}));\r\n            } \r\n    }\r\n\r\n\r\n   const handlerCoinCode1=(event)=>{\r\n     \r\n    setCoinCode1(event.target.value);\r\n    }\r\n\r\n    const handlerCoinCode2= (event)=>{\r\n        setCoinCode2(event.target.value);\r\n    }\r\n\r\n    const handlerCoinValue1=(event)=>{\r\n        let value=event.target.value;\r\n        if(/[+-]?([0-9]*[.]{0,1})?[0-9]+/.test(value) ||value==''){\r\n          \r\n        setCoinValue1(value) \r\n        format(1,value)\r\n        }\r\n     } \r\n\r\n    const handlerCoinValue2=(event)=>{\r\n        \r\n        let value=event.target.value;\r\n        if(/[+-]?([0-9]*[.]{0,1})?[0-9]+/.test(value) ||value==''){\r\n        setCoinValue2(value)\r\n        format(2,value)\r\n        }\r\n    }\r\n    useEffect(()=>{ \r\n        getCoins(); \r\n      \r\n    },[]);\r\n    useEffect(()=>{\r\n        let d = new Date(1599679560000);\r\n        console.log(d.getDate()+'/'+(d.getMonth()+1)+'/'+d.getFullYear())\r\n        if(infoCoins.length>0){\r\n            format(1,coinValue1);\r\n        }  \r\n    },[infoCoins])\r\n    useEffect(()=>{\r\n        if(coinValue1 !=''&&coinValue1 !=undefined){\r\n            format(1,coinValue1);\r\n        }\r\n\r\n    },[coinCode1])\r\n\r\n    useEffect(()=>{\r\n        if(coinValue2 !=''&&coinValue2 !=undefined){\r\n        format(2,coinValue2);\r\n        }\r\n       },[coinCode2])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Center>\r\n    \r\n\r\n                <div className={Style.box}>\r\n                    <header className={Style.FormGroupHeader}>\r\n                    <h2 className className={Style.h2}>conversor de moedas</h2>\r\n                    </header>\r\n                  <div className={Style.formGroup}>  \r\n                <select  className={Style.select} onChange={(event)=>handlerCoinCode1(event)}>\r\n                                {infoCoins.map((coin,index)=>\r\n                                coinCode2 !=coin.newCode&&\r\n                                <option\r\n                                key={index} \r\n                                value={coin.newCode}\r\n                                >{coin.name}</option>)}           \r\n                    </select>\r\n                    </div>\r\n                    <div className={Style.formGroup}>  \r\n                            <input \r\n                                  className={Style.input}\r\n\r\n                          value={coinValue1}\r\n                       onChange={(event)=>handlerCoinValue1(event)}\r\n                            />\r\n                            </div>\r\n                                             \r\n   <div className={Style.formGroup}>  \r\n                    <select className={Style.select}   onChange={(event)=>handlerCoinCode2(event)}>\r\n                         {infoCoins.map((coin,index)=>\r\n                         coinCode1 !=coin.newCode&&\r\n                         <option  key={index} value={coin.newCode} >{coin.name}</option>\r\n                         )\r\n                         } \r\n                    </select>\r\n     </div>              \r\n     <div className={Style.formGroup}>  \r\n      <input \r\n      className={Style.input}\r\n     onChange={(event)=>handlerCoinValue2(event)}\r\n                    value={coinValue2}/>\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n                 \r\n            </Center>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Header from '../../components/header';\r\nimport ConvertionOfCoins from '../../container/convertionOfCoins';\r\nexport default function Pages(props){\r\n    return(\r\n        <>\r\n        <Header></Header>\r\n        <ConvertionOfCoins></ConvertionOfCoins>\r\n        </>\r\n    ) \r\n}","import React from 'react';\nimport Home from './pages/home';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Home></Home>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}